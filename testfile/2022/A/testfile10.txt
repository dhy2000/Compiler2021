const int gloconst = 250;
int glox = 1000;
int print1() {
    printf("print1\n");
    return 1+1;
} 
int testParam(int a) {
    a = a + 1;
    return a;
}
int testParams(int a,int b[],int c[][3]) {
    int temp = (a + b[0]) * c[0][0];
    printf("testParams : %d\n",temp);
    return temp;
}
int testtwoParams(int a,int b) {
    return a + b + a - b;
}
void printsth() {
    int i = -1;
    if (i < 0) {
        printf("<\n");
        i = i + 1;
    }
    if (i >= 0) {
        printf(">=\n");
        i = i + 1;
    }
    if (i <= 1) {
        printf("<=\n");
        i = i + 1;
    }
    if (i > 1) {
        printf(">\n");
    }
    return;
}
int main() {    
    ;
    printf("20373188\n");
    int in = 0;
    in = getint();
    printf("the in is : %d\n",in);
    const int a = +-+-1;
    const int a1[3] = {1,+-+-1,1+1};
    const int a2[2][2] = {{1,+1},{0,1+1}};   
    const int a5 = 0;
    const int a6 = 2 + 2;
    const int a7 = 10,a8 = 100,a3[3] = {0,1,2},a4[2][3] = {{0,1,2},{3,4,5}};
    int b;
    int b1 = +-+-1;
    int b2 = 0;
    int b9 = 1 + 1;
    int b3[2];
    int b4[2][2];
    int b5[3][3] = {{1,+1,+-+-1},{1+1,0,0},{1,2,3}};
    int b6[3] = {0,+-+-1,1+1};
    int b7 = 1,b8 = 0,b10,b11[2] = {0,1},b12[2][2] = {{1,0},{0,1}};
    int b13,b14;
    print1();
    {
        {

        }
        int a = 0;
        printf("20373188\n");
    }
    testParam(b1);
    testParams(b1,b6,b5);
    testParams(b1,b5[0],b5);
    testtwoParams(b1,b2);
    int i = 0;
    if (1 || b1 == 100) {
        ;
    }
    if (0 && b1 != 100) {
        ;
    }
    if (!a5 && b9) {
        if (a5 == 0 || a != 0) {
            b = a;
            b = b6[2] + (b6[1] - b6[0] % b6[1]) * b6[1] / b6[2];
            printf("20373188\n");
            b = b5[1][1]; 
        }         
    } else {
        b = 100;
    }
    while (i <= 100) {
        if (i == 4) {
            break;
        }
        if (i < 0) {
            continue;
        }
        i = i + 1;
    }
    printsth();
    /*
    the first words
    */
    return 0;
}


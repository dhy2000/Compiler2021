const int b[3] = {1,2,3}, c[2][2] = {{1, 4}, {2, 3}};
int b1[4] = {1, 3, 5, 7}, c1[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};

int func1(int x1, int x2[], int x3[][3]){
    int t1 = x1;
    int t2 = x2[1];
    int t3 = x3[1][1];
    
    if(0 && 1) printf("error judge\n");

    if(1 || 0) printf("right judge\n");
    
    if(t1 > t2){
    	printf("1\n");
	} 
    if(!1){
    	printf("2\n");
	}
	if(t2 <= t3){
		printf("4\n");
	}
	if(t1 >= t3){
    	printf("3\n");	
	}
    return 2037;
}

void func2(){
    printf("in func2\n");
    return;
}


int main(){
    printf("20373377\n");
    const int _a = 2*3;
    
//    printf("2: _a is %d\n", _a);

    int a1 = 3*4;
    int a2 = a1*_a;

//    printf("3: a2 is %d\n", a2);

    a2 = 5*12;

//    printf("4: a2 is %d\n", a2);

    _a;
    ;;

    {
        int tmp = 687;
        
        printf("5: tmp is %d\n", tmp);
        {
            printf("6: a2*tmp = %d\n", a2*tmp);
        }
    }
    
    int i = 0;
    while(i != (1 + _a)){
        i = i+1;
        if(i < 2){
            if(i == 0) continue;
            int tmp;
			tmp = getint();
            printf("7: i = %d, tmp is %d\n", i, tmp);
        }else{
            if(i == 3) break;
        }
    }

    printf("func1 = %d\n", func1(_a, c1[1], c1));

    func2();
    
    return 0;
}
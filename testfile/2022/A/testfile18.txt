
int u = 3 % 3, v = 6, s = 9;
int dim_2[3][3];
int array[2][2] = {{1, 2}, {2, 4}};

int add_three(int a, int arr[], int b)
{
    return a + arr[0] + b;
}

int add1(int a, int b)
{
    int ans;
    const int AAA = 3, BBB_ = 3, CCC = 9;
    const int a1 = 12, a2 = 22;
    ans = a + b;
    printf("20373394\n");
    printf("a = %d\n", a);
    printf("b = %d\n", b);
    return ans;
}

int addmmm(int a, int b, int c)
{
    return a + b + c;
}

int add()
{
    return 99;
}

void printarrrr(int arr[][2])
{
    printf("first: %d", arr[0][0]);
    return;
}

void printarr(int arr[], int arr2[])
{
    printf("first : %d", arr[0]);
}

int main()
{
    int var_array[7] = {1, 2, 3, 4, 5, 7, 8};
    const int c_array[2] = {1 + 1, 3 + 3};
    int var_AAA[1] = {1};
    int var_2dim[2][2] = {{1, 2}, {var_array[0], var_array[1]}};
    const int ONE = 1;
    if (0 && 1)
    {
        var_array[1] = 3;
    }
    else if (1 || !ONE)
    {
        if (var_array[0]+99 < 99)
        {
            var_array[1] = 99 / add();
        }
    }
    add1(var_array[4 % 3], var_array[2]);
    int input_n, input_m;
    input_n = getint();
    add1(input_n, +array[0][1]);
    add1(-input_n, array[0][1]);
    add1(input_n, ONE);
    addmmm(1, 2, 3);
    var_array[3] = var_array[3] - var_array[5] * add();
    int i;
    int ui = +-+i;
    i = add();
    i = add1(1, 3);
    i = (i + var_array[0]);
    i = 0;
    if (i == 0)
    {
    }
    // fuck
    /*
        So boring
    */
    while (1)
    {
        if (var_array[i] == 2 && var_array[0] > 0)
        {
            printf("%d\n", var_array[i]);
        }
        else
            ;
        if (var_array[i] != 2)
        {
            printf("%d is not 2\n", var_array[i]);
        }
        printf("xxxx\n");
        i = i + 1;
        if (-var_array[i] >= 0 || var_array[0] <= 0 && 1)
        {
            var_array[i] = var_array[i] * 3;
            break;
        }
        else
        {
            continue;
        }
    }
    printarr(array[0], array[1]);
    printarrrr(array);
    return 0;
}
/* This Program is designed by 20373649. When you meet some problems, please contact me. */
/* This Program's difficulty level is A. */
/* Decl */
const int ConstA = 1, tmpConst[2] = {1, 3};
const int S[6] = {1,3,7,6,5,5};
const int cccA = 1, cccB = 2, cccC = 4;
const int Vect2[2][3] = {{1,2,4}, {8,16,32}};
int A = ConstA * 2 + 1; // 3
int D[3] = {S[1], S[3], S[5]}; // 3,6,5
int c[3][4];
int globalVal = 0;

/* FuncDef */
void noReturn() {
    printf("This Function has no return!\n");
}

int intReturn() {
    printf("This Function has int return!\n");
    return 0;
}

int multiply_and_add(int a, int b, int c) {
    printf("multiply_and_add: a=%d b=%d c=%d\n", a, b, c);
    return a*b+c;
}

int condReturn(int val) {
    if (val == 1) {
        return 3;
    } else if (val == 2) { // supports else if
        return 4;
    } else if (val == 3) {
        return 8;
    } else {
        return 10;
    }
    return 0;
}

int add(int a, int b) {
    // printf("Is Stack OK?\n");
    globalVal = globalVal + 1;
    // printf("Is Stack OK?\n");
    return a + b;
}

int main() {
    /* Stage 1: Output, Declare, Function Call, and Statement Test. */
    printf("20373649\n"); // print1
    noReturn(); // print2
    int ans = multiply_and_add(S[0], 3, 9); // print3, ans = 12
    {} // empty stmt
    {} // empty stmt 2
    int WeekDay = 2;
    if (WeekDay != 1) {
        if (WeekDay != 2) {
            printf("Weekday != 2\n");
        }
        else {
            printf("Weekday == 2\n");
        }
    } else {
        printf("Weekday == 1\n");
    } // print4

    const int ConstA = 2;
    {
        printf("redefined ConstA = %d\n", ConstA);
    }

    {
        {
            {

            }
        }
    }

    multiply_and_add(condReturn(1), condReturn(2), condReturn(3)); // print5

    // /* Stage 2: while loop Test */
    int bin = 0; // needs to be 10111
    int decimal = 23;
    int origin_dec = decimal;
    int ten = 1;
    while (decimal != 0) {
        bin = bin + ten * (decimal % +-+-2); // +-+-2 == 2
        int tmp = decimal / +2;
        decimal = tmp;
        ten = ten * 10;
    }

    printf("The binary of decimal %d is %d.\n", origin_dec, bin);  // print6
    if (bin != 0) printf("binary != 0\n"); // print7, test no {}

    /* Stage 3: LVal Test And Input */
    // Input an array, which contains 3 elements.
    int i = 3, t = 0;
    int num[4-1];
    while (i != 0) {
        num[t] = getint();
        t = t + 1;
        i = i - 1;
    }

    // permutation: 3! = 6
    D[0] = num[0];
    D[1] = num[1];
    D[2] = num[2];

    
    if (num[0] >= num[1] && num[1] >= num[2]) {
       num[0] = D[2]; 
       num[1] = D[1]; 
       num[2] = D[0]; 
    } else if (num[0] >= num[2] && num[2] >= num[1]) {
        num[0] = D[1];
        num[1] = D[2];
        num[2] = D[0];
    } else if (num[1] >= num[0] && num[0] >= num[2]) {
        num[0] = D[2];
        num[1] = D[0];
        num[2] = D[1];
    } else if (num[1] >= num[2] && num[2] >= num[0]) {
        num[0] = D[0];
        num[1] = D[2];
        num[2] = D[1];
    } else if (num[2] >= num[0] && num[0] >= num[1]) {
        num[0] = D[1];
        num[1] = D[0];
        num[2] = D[2];
    } else if (num[2] >= num[1] && num[0] <= num[1]) {
        num[0] = D[0];
        num[1] = D[1];
        num[2] = D[2];
    } else {
        printf("This situation should never happen!\n");
    }
    printf("The correct sort of the input array is: %d %d %d.\n", num[0], num[1], num[2]); // print8
    
    if (0 == 2 || 3 == 5 || 2 == 2 || (3+1) == 6 || intReturn() == 0) {
        printf("short circuit evaluation: Or\n"); // print9
    }

    if (3 > 2 && !0 && add(1, 2) == 4 && add(1,4) == 5) { // only excute one add
        printf("Never happen!\n");
    }

    if (globalVal == 1) {
        printf("globalVal: %d. short circuit evaluation:And\n", globalVal); // print10
    } else {
        printf("globalVal: %d. short circuit evaluation:And Failed\n", globalVal);
    }

    return 0;
}

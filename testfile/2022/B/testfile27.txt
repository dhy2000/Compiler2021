const int MAT1[2] = {1, 10};
int MAT2[3];
int MAT3[2] = {1 + 1, 4};

const int DMAT1[2][2] = {{1, 2}, {2, 3}};
int DMAT2[2][2];
int DMAT3[2][2] = {{4, 3}, {9, 9}};

int getVal6() {
	return 6;
}

int getValDouble(int a) {
	return a + a;
}

int getAddVal(int a, int b) {
	return a + b;
}

int otherPrint(int lis[]) {
	int i = 0;
	printf("%d %d %d %d %d\n", lis[0], lis[1],  MAT1[0], MAT2[0], MAT3[0]);
	return 0;
}

void DotherPrint(int lis[][2]) {
	int i = 0;
	printf("%d %d %d %d\n", lis[0][0], lis[0][1],  lis[1][0], lis[1][1]);
	printf("%d %d %d %d\n", DMAT2[0][0], DMAT2[0][1],  DMAT2[1][0], DMAT2[1][1]);
	return;
}

int main() {
	int i = +1;
	printf("20376131\n");
	;
	1 + 1;
	while (i != 2) {
		i = i + 1;
	}
	{
		i = MAT1[1];
	}
	i = (i + 1);
	i = -i;
	printf("i: %d\n", i);
	i = getVal6();
	i = i * +-4 / -2 % 7;
	if (!i) {
		i + 2;
	}
	if (i > 0) {
		DMAT2[0][0] = 2;
		DMAT2[0][1] = getValDouble(DMAT2[0][0]);
		DMAT2[1][0] = DMAT2[0][1] * -+-2;
		DMAT2[1][1] = getValDouble(getAddVal(DMAT2[0][1], DMAT2[0][1]));
	} else {
		i + 2;
	}
	if (i == 5) {
		printf("i == 5 is True!\n");
	}
	int j = 2; 
	i = getValDouble(MAT1[1]);
	j = (-+-getValDouble(j)) + 2 * -2;
	printf("i: %d, j: %d\n", i, j);	
	
	MAT2[0] = 1; MAT2[1] = 3;
	otherPrint(MAT3);
	printf("i: %d, j: %d\n", DMAT1[1][1], DMAT1[0][0]);	
	DotherPrint(DMAT3);
	DMAT2[0][1] = 520;
	printf("%d\n", DMAT2[0][1]);
	DMAT2[1][0] = 1314;
	printf("%d\n", DMAT2[1][0]);
	return 0;
}
/*
	changed from testfile3-- function return value from void to int
*/
// const int array1 define
const int row2_0[3][3] = {{0, 0, 0}, {0, 0, 1}, {2, 4, 7}};
const int row2_1[3][3] = {{8, 7, 6}, {3, 4, 26}, {12, 2, 6}};
const int row2_2[3][3] = {{28, 37, 26}, {8, 7, 6},{8, 7, 6}};
const int row2_3[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};

// const int array2 define
const int row_0[3] = {1, 2, 4};
const int row_1[3] = {4, 2, 5};
const int row_2[3] = {1, 2, 9};
const int row_3[3] = {3, 5, 7};

// int array1 define
int va_row0[3];
int va_row1[3];
int va_row2[3] = {3, 4, 3};
int va_row3[3] = {1, 3, 6};

// int array2 define
int va_row2_0[3][3];
int va_row2_1[3][3];
int va_row2_2[3][3] = {{8, 7, 6}, {8, 7, 6}, {8, 7, 6}};
int va_row2_3[3][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};

/* getint function define*/
/*
int getint() {
	int n;
	scanf("%d", &n);
	return n;
}
*/

//function test -- the return value is **int**
// just a function
int fun_1() {
	va_row2[1] = va_row3[2] - 3;
	va_row1[2] = row_2[1] * 3;
	va_row2_0[2][1] = row2_3[1][1];
	return va_row2_0[2][1];
}

// input number
int fun_2(int a) {
	int x; 
	x = getint();
	x = a + x;
	printf("the output of fun_2 is s\n");
	return x;
}

// input number and array
int fun_3(int x, int arr[]) {
	int tmp = x + arr[0] + arr[1] - arr[2];
	printf("%d", tmp);
	printf("\n");
	return arr[0] - arr[1] + arr[2] * 2 + 5 % 2 - 4 / 3;
}

// input 2 array
int fun_4(int ar1[], int ar2[]) {
	va_row1[0] = ar1[2] / 2;
	va_row2_2[0][2] = ar2[2];
	printf("%d", ar1[0]);
	printf("\n");
	return ar2[1] * ar1[0];
}

// input 2 level array
int fun_5(int arr[][3]) {
	int arrtmp = arr[2][1];
	int tmp = fun_1();
	return tmp * arrtmp;
}

int main() {
	va_row0[0] = row_3[2];
	va_row3[2] = row2_3[1][2];
	va_row1[1] = 1143;
	
	va_row2_0[0][1] = row_3[2];
	
	printf("20373142\n");
	printf("this is the second text line.\n"); 
	
	int t1, t2, t3;
	int arr[5];
	t1 = fun_1();
	t2 = t1 + fun_2(va_row3[2]);
	t3 = fun_2(va_row2_2[0][2]);
	arr[0] = fun_3(1, va_row2) + fun_3(va_row2_3[1][2], va_row2_2[2]);
	arr[1] = fun_4(va_row2, va_row2_2[0]);
	arr[2] = fun_4(va_row2_0[0], va_row2_3[2]);
	arr[3] = fun_5(va_row2_1);
	int sum = t1 + t2 + t3 + arr[0] + arr[1] + arr[2] + arr[3];
	sum = +-+sum;
	if (sum != 5) {
		printf("%d", sum);
	}
	return 0;
}


